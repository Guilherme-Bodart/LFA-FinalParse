turtle_grammar = """
    ?start: sttmt

    ?sttmt : (expr) ";"

    ?expr : (assign) 
            | (ifexpr) 
            | (defun)
            | (atom)
            | (instruction)+ -> instruction
            | (conj)

    ?instruction: MOVEMENT valor               -> movement
               | "c" COLOR [COLOR]              -> change_color
               | "fill" (code_block)            -> fill
               | "repeat" valor (code_block)   -> repeat
               | "reset"                        -> reset

    paramlist : ((IDENT)? ("," (IDENT))*)

    ?defun : "def" (IDENT) "(" (paramlist) ")" (expr)      
    
    ?ifexpr : "if" (conj) "then" (conj) ("else" (conj))?       
    
    ?code_block: "{" instruction+ "}"

    ?conj : (variable|NUMBER) (OPERATOR (variable|NUMBER))*

    ?rel : OPERATOR

    MOVEMENT: "f"
                |"b"
                |"l"
                |"r"

    OPERATOR : "==" 
                | "!=" 
                | ">" 
                | "=>" 
                | "<" 
                | "=<"
    
    ?assign : "var"? (variable) "=" (expr)
    
    ?atom : "-" (atom)
                | "not" (atom)
                | "(" (expr) ")"
                | NUMBER
                | (functioncall)
                | (variable) 
    
    ?functioncall : (IDENT)  (arglist) 
    
    arglist : "(" ((expr) ("," (expr))*)? ")"
    
    ?valor: NUMBER|variable

    ?variable: (IDENT)

    IDENT : LETTER+

    COLOR: LETTER+
    %import common.LETTER
    %import common.INT -> NUMBER
    %import common.WS
    %ignore WS
"""
